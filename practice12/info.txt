Stack (Стек):

Карты хранятся в стеке, где верхние карты находятся в вершине стека.
Для взятия карт из вершины стека используется метод pop(), а для добавления карт - push().
Стек реализует LIFO (Last-In-First-Out) принцип.

Queue (Очередь):

Карты хранятся в очереди, где первые карты находятся в начале очереди.
Для взятия карт из начала очереди используется метод poll(), а для добавления карт - offer().
Очередь реализует FIFO (First-In-First-Out) принцип.

DoubleList (Двусвязный список):

Карты хранятся в двусвязном списке, который позволяет добавлять и удалять карты как с начала, так и с конца списка.
Двусвязный список более гибок и позволяет эффективно добавлять и удалять элементы с обоих концов.
Выбор между этими структурами данных зависит от конкретных требований задачи и удобства реализации.
Stack и Queue хорошо подходят для определенных типов игр, где добавление и извлечение происходит только с одного конца,
в то время как DoubleList более универсален и позволяет работать с обоими концами списка.

Deque (Double-ended queue):

Deque - это интерфейс, который предоставляет двустороннюю очередь для добавления и удаления элементов с обоих концов.
ArrayDeque - это одна из реализаций Deque в Java, которая эффективно реализует этот интерфейс.
Deque предоставляет методы offerFirst(), offerLast(), pollFirst(), pollLast()
и другие для добавления и удаления элементов с начала и конца очереди.
Deque обеспечивает более удобную работу с двусторонней очередью и более эффективно управляет
добавлением и удалением элементов в сравнении с DoubleList.